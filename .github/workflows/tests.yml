# https://help.github.com/en/categories/automating-your-workflow-with-github-actions

on:
  pull_request:
  push:
    branches:
      - "master"
    tags:
      - "**"

name: "Tests"

jobs:
  tests:
    name: "Tests"

    runs-on: "ubuntu-latest"

    services:
      redis:
        image: redis
        ports:
          - 6379/tcp
        options: --health-cmd="redis-cli ping" --health-interval=10s --health-timeout=5s --health-retries=3
    strategy:
      matrix:
        php-version:
          - "7.4"

    steps:
      - name: "Checkout"
        uses: "actions/checkout@v2"

      - name: Start redis service
        run: sudo /etc/init.d/redis start
        
      - name: "Install PHP with extensions"
        uses: "shivammathur/setup-php@v2"
        with:
          coverage: "none"
          extensions: redis, intl
          ini-values: "memory_limit=-1"
          php-version: "${{ matrix.php-version }}"

      - name: "Determine composer cache directory"
        id: "determine-composer-cache-directory"
        run: "echo \"::set-output name=directory::$(composer config cache-dir)\""

      - name: "Cache dependencies installed with composer"
        uses: "actions/cache@v1"
        with:
          path: "${{ steps.determine-composer-cache-directory.outputs.directory }}"
          key: "php-${{ matrix.php-version }}-composer-${{ hashFiles('**/composer.json') }}"
          restore-keys: "php-${{ matrix.php-version }}-composer-"

      - name: "Install dependencies with composer"
        run: "composer install --no-interaction --no-progress --no-suggest"

      - name: "Run tests with phpunit/phpunit"
        run: "vendor/bin/phpunit"

  code-coverage:
    name: "Code Coverage"

    runs-on: "ubuntu-latest"

    strategy:
      matrix:
        php-version:
          - "7.4"

    steps:
      - name: "Checkout"
        uses: "actions/checkout@v2"

      - name: Start redis service
        run: sudo /etc/init.d/redis start
        
      - name: "Install PHP with extensions"
        uses: "shivammathur/setup-php@v2"
        with:
          coverage: "xdebug"
          extensions: redis, intl
          ini-values: "memory_limit=-1"
          php-version: "${{ matrix.php-version }}"

      - name: "Determine composer cache directory"
        id: "determine-composer-cache-directory"
        run: "echo \"::set-output name=directory::$(composer config cache-dir)\""
        
      - name: "Cache dependencies installed with composer"
        uses: "actions/cache@v1"
        with:
          path: "${{ steps.determine-composer-cache-directory.outputs.directory }}"
          key: "php-${{ matrix.php-version }}-composer-${{ hashFiles('**/composer.json') }}"
          restore-keys: "php-${{ matrix.php-version }}-composer-"

      - name: "Install dependencies with composer"
        run: "composer install --no-interaction --no-progress --no-suggest"

      - name: "Create build directory"
        run: "mkdir -p .build/logs"

      - name: "Collect code coverage with Xdebug and phpunit/phpunit"
        run: "vendor/bin/phpunit --coverage-clover=.build/logs/clover.xml"

      - name: "Scrutinizer Code Coverage"
        run: "wget https://scrutinizer-ci.com/ocular.phar"

      - name: "Scrutinizer Code Coverage Upload"
        run: "php ocular.phar code-coverage:upload --format=php-clover .build/logs/clover.xml"
